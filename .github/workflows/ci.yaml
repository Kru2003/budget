name: Budget CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    tests:
        name: Lint & Test
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: ${{ secrets.APP_DATABASE_PASSWORD }}
                    MYSQL_DATABASE: ${{ secrets.APP_DATABASE }}
                ports:
                    - 3306:3306

        env:
            DB_CONNECTION: mysql
            DB_HOST: 127.0.0.1
            DB_PORT: 3306
            DB_DATABASE: ${{ secrets.APP_DATABASE }}
            DB_USERNAME: root
            DB_PASSWORD: ${{ secrets.APP_DATABASE_PASSWORD }}

        steps:
            - uses: actions/checkout@v4
            - name: PHP setup
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"

            - name: Install Composer
              run: composer install

            - name: Lint
              run: ./vendor/bin/phpcs

            - name: Install node dependencies
              run: php artisan budget:install

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

            - name: Migrate database
              run: php artisan migrate --force

            - name: Run tests
              run: ./vendor/bin/phpunit

            - name: Run browser tests
              env:
                  APP_URL: http://127.0.0.1:8000
                  DUSK_DRIVER_URL: http://localhost:9515
              run: |
                  php artisan dusk:chrome-driver --detect
                  ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &
                  php artisan serve &
                  php artisan dusk

    image-build:
        runs-on: ubuntu-latest
        needs: [tests]

        steps:
            - uses: actions/checkout@v4
            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v3

            # caches docker layers for a particular workflow in /tmp/.buildx-cache
            - name: Cache Docker layers
              uses: actions/cache@v4
              with:
                  path: /tmp/.buildx-cache
                  key: ${{ runner.os }}-docker-${{ github.sha }}
                  restore-keys: |
                      ${{ runner.os }}-docker-

            # build image only when event will be pull request
            - name: Only build
              if: ${{ github.event_name == 'pull_request' }}
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./docker/Dockerfile
                  push: false
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache

            # login to docker registry, generate tag, build image and push to docker hub when event will be push main
            - name: Login to Docker registry
              if: github.event_name == 'push'
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

            - name: Generate Docker tag
              if: github.event_name == 'push'
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ secrets.DOCKER_USERNAME }}/budget
                  tags: |
                      type=raw,{{branch}}-{{sha}}-{{date 'X'}}

            - name: Build and Push docker image
              if: ${{ github.event_name == 'push' }}
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./docker/Dockerfile
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  cache-from: type=local,src=/tmp/.buildx-cache
                  cache-to: type=local,dest=/tmp/.buildx-cache
