name: Budget CI

on:
    push:
        branches: [main]
    pull_request:
        branches: [main]

jobs:
    tests:
        runs-on: ubuntu-latest

        services:
            mysql:
                image: mysql:8.0
                env:
                    MYSQL_ROOT_PASSWORD: ${{ secrets.APP_DATABASE_PASSWORD }}
                    MYSQL_DATABASE: ${{ secrets.APP_DATABASE }}
                ports:
                    - 3306:3306

        env:
            DB_CONNECTION: mysql
            DB_HOST: 127.0.0.1
            DB_PORT: 3306
            DB_DATABASE: ${{ secrets.APP_DATABASE }}
            DB_USERNAME: root
            DB_PASSWORD: ${{ secrets.APP_DATABASE_PASSWORD }}

        steps:
            - uses: actions/checkout@v4
            - name: PHP setup
              uses: shivammathur/setup-php@v2
              with:
                  php-version: "8.2"

            - name: Install Composer
              run: composer install

            - name: Linting
              run: ./vendor/bin/phpcs

            - name: Install node dependencies
              run: php artisan budget:install

            - name: Copy .env
              run: php -r "file_exists('.env') || copy('.env.ci', '.env');"

            - name: Migrate database
              run: php artisan migrate --force

            - name: Run tests
              run: ./vendor/bin/phpunit

            - name: Run browser tests
              env:
                  APP_URL: http://127.0.0.1:8000
                  DUSK_DRIVER_URL: http://localhost:9515
              run: |
                  php artisan dusk:chrome-driver --detect
                  ./vendor/laravel/dusk/bin/chromedriver-linux --port=9515 &
                  php artisan serve &
                  php artisan dusk

    image-build:
        runs-on: ubuntu-latest
        needs: [tests]

        steps:
            - uses: actions/checkout@v4
            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to Docker registry
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

            - name: Generate Docker tag
              id: meta
              run: echo "tag=${{ github.ref_name }}-${{ github.sha }}-$(date + '%Y%m%d%h%M%S')" >> GITHUB_OUTPUT

            - name: Build and Push docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./docker/Dockerfile
                  push: true
                  tags: budget:${{ steps.meta.outputs.tag }}
